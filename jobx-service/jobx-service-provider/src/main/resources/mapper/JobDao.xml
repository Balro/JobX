<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jobxhub.service.dao.JobDao">
    <resultMap id="jobEntity" type="com.jobxhub.service.entity.JobEntity">
        <result column="job_id" property="jobId"/>
        <result column="agent_id" property="agentId"/>
        <result column="agent_name" property="agentName"/>
        <result column="user_id" property="userId"/>
        <result column="job_type" property="jobType"/>
        <result column="job_name" property="jobName"/>
        <result column="command" property="command"/>
        <result column="comment" property="comment"/>
        <result column="exec_user" property="execUser"/>
        <result column="cron_exp" property="cronExp"/>
        <result column="alarm" property="alarm"/>
        <result column="alarm_email" property="alarmEmail"/>
        <result column="alarm_ding_url" property="alarmDingURL"/>
        <result column="alarm_ding_user" property="alarmDingAtUser"/>
        <result column="alarm_sms" property="alarmSms"/>
        <result column="alarm_sms_template" property="alarmSmsTemplate"/>
        <result column="pause" property="pause"/>
        <result column="run_count" property="runCount"/>
        <result column="success_exit" property="successExit"/>
        <result column="timeout" property="timeout"/>
        <result column="token" property="token"/>
        <result column="update_time" property="updateTime"/>
        <result column="user_name" property="operateUname"/>
    </resultMap>

    <sql id="query_Job">
        j.job_id,
        j.agent_id,
        j.user_id,
        j.job_type,
        j.job_name,
        j.command,
        j.comment,
        j.exec_user,
        j.cron_exp,
        j.alarm,
        j.alarm_email,
        j.alarm_ding_url,
        j.alarm_ding_user,
        j.alarm_sms,
        j.alarm_sms_template,
        j.pause,
        j.run_count,
        j.success_exit,
        j.timeout,
        j.token,
        j.update_time
    </sql>

    <select id="getAll" resultMap="jobEntity">
        select
        <include refid="query_Job"/>
        from t_job as j
        where j.job_type <![CDATA[ <  ]]> 3
    </select>

    <select id="getById" parameterType="java.lang.Long" resultMap="jobEntity">
        select
        <include refid="query_Job"/>,
        a.agent_name,
        a.host as host
        from t_job as j
        inner join t_agent a
        on j.agent_id = a.agent_id
        where j.job_id=#{jobId}
    </select>

    <select id="getByAgent" parameterType="java.lang.Long" resultMap="jobEntity">
        select
        <include refid="query_Job"/>
        from t_job as j
        where j.agent_id = #{agentId}
        <if test="jobType != null">
            and j.job_type=#{jobType}
        </if>
        <if test="jobType == null">
            and j.job_type <![CDATA[ <  ]]> 3
        </if>
    </select>

    <select id="getJob" resultMap="jobEntity">
        select
        <include refid="query_Job"/>
        from t_job as j
        <if test="jobType != null">
            where j.job_type=#{jobType}
        </if>
        <if test="jobType == null">
            where j.job_type <![CDATA[ <  ]]> 3
        </if>
    </select>

    <select id="getScheduleJob" resultMap="jobEntity">
        select
        <include refid="query_Job"/>
        from t_job as j
        where j.pause = 0
        and j.job_type <![CDATA[ <  ]]> 3
    </select>

    <select id="getByPageBean" resultMap="jobEntity">
        select
        <include refid="query_Job"/>,
        a.agent_name
        from t_job as j
        inner join t_agent as a
        on j.agent_id = a.agent_id
        where 1 = 1
        <if test="pager.filter.keys.size>0">
            <if test="pager.filter.job.userId != null">
                and j.user_id = #{pager.filter.job.userId}
            </if>
            <if test="pager.filter.job.agentId != null">
                and j.agent_id = #{pager.filter.job.agentId}
            </if>
            <if test="pager.filter.job.jobType == null">
                and j.job_type <![CDATA[ < ]]> 3
            </if>
            <if test="pager.filter.job.jobType != null">
                and j.job_type = #{pager.filter.job.jobType}
            </if>
            <if test="pager.filter.job.jobName != null and pager.filter.job.jobName!='' ">
                and j.job_name like concat('%',#{pager.filter.job.jobName},'%')
            </if>
        </if>
        <if test="pager.orderBy!=null">
            <choose>
                <when test="pager.orderBy=='agent_name'">
                    order by a.${pager.orderBy} ${pager.order}
                </when>
                <otherwise>
                    order by j.${pager.orderBy} ${pager.order}
                </otherwise>
            </choose>
        </if>
        limit #{pager.offset}, #{pager.pageSize}
    </select>

    <select id="getCount" resultType="java.lang.Integer">
        select count(1) from t_job as j
        where job_type <![CDATA[ <  ]]> 3
        <if test="filter.keys.size>0">
            <if test="filter.job.userId != null">
                and j.user_id = #{filter.job.userId}
            </if>
            <if test="filter.job.agentId != null">
                and j.agent_id = #{filter.job.agentId}
            </if>
            <if test="filter.job.jobType != null">
                and j.job_type = #{filter.job.jobType}
            </if>
            <if test="filter.job.jobType == null">
                and j.job_type <![CDATA[ < ]]> 3
            </if>
            <if test=" filter.job.jobName != null and filter.job.jobName != '' ">
                and j.job_name like concat('%',#{filter.job.jobName},'%')
            </if>
        </if>
    </select>

    <select id="existsCount" resultType="java.lang.Integer">
        select count(1) from t_job as j
        where j.agent_id = #{agentId}
        and j.job_name = #{name}
        and j.job_type <![CDATA[ < ]]> 3
        <if test="jobId!=null">
            and j.job_id <![CDATA[ <>  ]]>#{jobId}
        </if>
    </select>

    <insert id="addJob" parameterType="com.jobxhub.service.entity.JobEntity" useGeneratedKeys="true" keyProperty="jobId">
        insert into t_job
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="agentId != null">
                agent_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="jobType != null">
                job_type,
            </if>
            <if test="jobName != null">
                job_name,
            </if>
            <if test="command != null">
                command,
            </if>
            <if test="comment != null">
                comment,
            </if>
            <if test="execUser != null">
                exec_user,
            </if>
            <if test="cronExp != null">
                cron_exp,
            </if>
            <if test="alarm != null">
                alarm,
            </if>
            <if test="alarmEmail != null">
                alarm_email,
            </if>
            <if test="alarmDingURL != null">
                alarm_ding_url,
            </if>
            <if test="alarmDingAtUser != null">
                alarm_ding_user,
            </if>
            <if test="alarmSms != null">
                alarm_sms,
            </if>
            <if test="alarmSmsTemplate != null">
                alarm_sms_template,
            </if>
            <if test="pause != null">
                pause,
            </if>
            <if test="runCount != null">
                run_count,
            </if>
            <if test="successExit != null">
                success_exit,
            </if>
            <if test="timeout != null">
                timeout,
            </if>
            <if test="token != null">
                token,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="agentId != null">
                #{agentId},
            </if>
            <if test="userId != null">
                #{userId},
            </if>
            <if test="jobType != null">
                #{jobType},
            </if>
            <if test="jobName != null">
                #{jobName},
            </if>
            <if test="command != null">
                #{command},
            </if>
            <if test="comment != null">
                #{comment},
            </if>
            <if test="execUser != null">
                #{execUser},
            </if>
            <if test="cronExp != null">
                #{cronExp},
            </if>
            <if test="alarm != null">
                #{alarm},
            </if>
            <if test="alarmEmail != null">
                #{alarmEmail},
            </if>
            <if test="alarmDingURL != null">
                #{alarmDingURL},
            </if>
            <if test="alarmDingAtUser != null">
                #{alarmDingAtUser},
            </if>
            <if test="alarmSms != null">
                #{alarmSms},
            </if>
            <if test="alarmSmsTemplate != null">
                #{alarmSmsTemplate},
            </if>
            <if test="pause != null">
                #{pause},
            </if>
            <if test="runCount != null">
                #{runCount},
            </if>
            <if test="successExit != null">
                #{successExit},
            </if>
            <if test="timeout != null">
                #{timeout},
            </if>
            <if test="token != null">
                #{token},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
        </trim>
    </insert>

    <insert id="addNode" parameterType="com.jobxhub.service.entity.JobEntity" useGeneratedKeys="true" keyProperty="jobId">
        insert into t_job (
            agent_id,
            user_id,
            job_type,
            job_name,
            command,
            success_exit,
            exec_user
        ) values (
            #{agentId},
            #{userId},
            #{jobType},
            #{jobName},
            #{command},
            #{successExit},
            #{execUser}
        )
    </insert>

    <update id="update" parameterType="com.jobxhub.service.entity.JobEntity">
        update t_job
        set
            agent_id      =     #{agentId},
            user_id       =     #{userId},
            job_type      =     #{jobType},
            job_name      =     #{jobName},
            command       =     #{command},
            comment       =     #{comment},
            exec_user     =     #{execUser},
            cron_exp      =     #{cronExp},
            alarm         =     #{alarm},
            alarm_email   =     #{alarmEmail},
            mobile        =     #{mobile},
            run_count     =     #{runCount},
            success_exit  =     #{successExit},
            timeout       =     #{timeout},
            token         =     #{token},
            update_time   =     #{updateTime},
        where job_id      =     #{jobId}
	</update>

    <update id="updateToken">
        update t_job
        set token = #{token}
        where job_id = #{jobId}
    </update>

    <update id="pause">
        update t_job
        set pause = #{pause}
        where job_id = #{jobId}
    </update>

    <delete id="delete" parameterType="java.lang.Long">
        delete from t_job where job_id=#{id}
    </delete>

</mapper>